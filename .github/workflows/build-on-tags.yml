name: CI/CD - Release IHM

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for tags
  push:
    tags:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # BUILD
  build-ihm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      -
        name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      # Update version
      - name: Get tag Version
        id: get_version
        run: echo VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | cut -b 2- )  >> $GITHUB_OUTPUT
      - name: Apply version
        run: npm version ${{ steps.get_version.outputs.VERSION }} --git-tag-version=false
      -
        run: npm ci
        name: CI Install
      -
        run: npm run test
        name: Unit tests
      - name: Update config in .env.production
        run: |
          sed -i 's/__BUDGET_IHM_VERSION__/${{ steps.get_version.outputs.VERSION }}/g' external-ressources/conf/.env.production;
          sed -i 's/__OIDC_CLIENT_ID__/${{ secrets.OIDC_CLIENT_ID }}/g' external-ressources/conf/.env.production;
          sed -i 's/__OIDC_CLIENT_SECRET__/${{ secrets.OIDC_CLIENT_SECRET }}/g' external-ressources/conf/.env.production;
          sed -i 's/__CONFIG_URL_BACKENDS__/${{ vars.CONFIG_URL_BACKENDS }}/g' external-ressources/conf/.env.production;
          sed -i 's/__API_GW_API_KEY__/${{ secrets.API_GW_API_KEY }}/g' external-ressources/conf/.env.production;
      -
        run: mv external-ressources/conf/.env.production .env
        name: Set env PRODUCTION
      -
        run: npm run build --if-present
        name: Build
      -
        run: zip -r app_build.zip build/*
  # Upload RELEASE
      -
        uses: actions/upload-artifact@v3
        name: Upload IHM app
        with:
          path: app_build.zip
          name: app_build.zip

  # Deploy sur S3
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    name: deploy to S3 PROD
    needs: build-ihm
    steps:
      -
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        name: Download IHM app
        with:
          name: app_build.zip
      -
        name: Unzip app archive
        run: unzip app_build.zip
      - name: Deploy
        uses: reggionick/s3-deploy@v4
        with:
          folder: build
          bucket: budget-app-ihm
          bucket-region: eu-west-3
          invalidation: /
          dist-id: ECVOXDF9144XV
          delete-removed: true
          no-cache: true
          private: true
          filesToInclude: ".*/*,*/*,**"
