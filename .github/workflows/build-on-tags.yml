name: CI - Release IHM

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for tags
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # BUILD
  build-ihm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      -
        name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      # Update version
      - name: Get tag Version
        id: get_version
        run: echo VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | cut -b 2- )  >> $GITHUB_OUTPUT
      - name: Apply version
        run: npm version ${{ steps.get_version.outputs.VERSION }} --git-tag-version=false
      -
        run: npm ci
        name: CI Install
      -
        run: npm run test
        name: Unit tests
      -
        name: Update config in .env
        run: |
          sed -i 's/__BUDGET_IHM_VERSION__/${{ steps.get_version.outputs.VERSION }}/g' external-ressources/conf/.env.production; |
          sed -i 's/__OIDC_CLIENT_ID__/${{ secrets.OIDC_CLIENT_ID }}/g' external-ressources/conf/.env.production; |
          sed -i 's/__OIDC_CLIENT_SECRET__/${{ secrets.OIDC_CLIENT_SECRET }}/g' external-ressources/conf/.env.production;
      -
        run: mv external-ressources/conf/.env.production .env
        name: Set env PRODUCTION
      -
        run: npm run build --if-present
        name: Build
      -
        run: zip -r app_build.zip build/*
  # Upload RELEASE
      -
        uses: actions/upload-artifact@v3
        name: Upload IHM app
        with:
          path: app_build.zip
          name: app_build.zip

  # PUBLISH DOCKER IMAGES
  docker-ihm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-ihm
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        name: Download IHM app
        with:
          name: app_build.zip
      -
        name: Unzip app archive
        run: unzip app_build.zip
      -
        name: Copie du DockerFile
        run: cp /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/external-ressources/docker/Dockerfile-IHM /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/Dockerfile-IHM
      -
        name: Copie de la config nginx
        run: cp /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/external-ressources/docker/nginx.conf /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/nginx.conf
      # PrÃ©paration de la version
      -
        name: Get the version
        id: get_version
        run: echo VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | cut -b 2-) >> $GITHUB_OUTPUT
      -
        name: Build and push IHM
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/
          platforms: linux/amd64, linux/arm64/v8
          file: Dockerfile-IHM
          push: true
          tags: vzwingmabudget/gestion_budget_ihm:latest, vzwingmabudget/gestion_budget_ihm:${{ steps.get_version.outputs.VERSION }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}