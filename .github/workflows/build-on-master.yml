name: CI/CD - Snapshot IHM
# Controls when the action will run.
# Triggers the workflow on push or pull request events on all but the master branch
on:
  # Sequence of patterns matched against refs/heads
  push:
    branches: [ master ]
  pull_request:
    branches-ignore: [ dependabot/** ]
permissions:
  contents: read
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: QUA
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js 
        uses: actions/setup-node@v5
        with:
          node-version: latest
      - run: npm ci
        name: CI Install
      - name: Update config in .env.staging
        run: |
          sed -i 's/__OIDC_CLIENT_ID__/${{ secrets.OIDC_CLIENT_ID }}/g' external-ressources/conf/.env.staging; 
          sed -i 's/__OIDC_CLIENT_SECRET__/${{ secrets.OIDC_CLIENT_SECRET }}/g' external-ressources/conf/.env.staging;
          sed -i 's/__CONFIG_URL_BACKENDS__/${{ vars.CONFIG_URL_BACKENDS }}/g' external-ressources/conf/.env.staging;
          sed -i 's/__API_GW_API_KEY__/${{ secrets.API_GW_API_KEY }}/g' external-ressources/conf/.env.staging;
      - run: mv external-ressources/conf/.env.staging .env
        name: Set env STAGING
      - run: npm run build --if-present
        name: Build Staging
      - run: zip -r app_build.zip build/*
      - uses: actions/upload-artifact@v4
        name: Upload IHM app
        with:
          path: app_build.zip
          name: app_build.zip
  # LINT
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: latest
      - run: npm install eslint --save
      - run: npm run lint
  sonarcloud:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: read
    steps:
      - uses: actions/checkout@v5
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v6
        with:
          projectBaseDir: /home/runner/work/gestion-budget-ihm/gestion-budget-ihm
          args: >
            -Dsonar.organization=vzwingma-github
            -Dsonar.projectKey=vzwingma_gestion-budget-ihm
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # Deploy sur S3
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    name: deploy to S3 QUA
    needs: build
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        name: Download IHM app
        with:
          name: app_build.zip
      - name: Unzip app archive
        run: unzip app_build.zip
      - name: Deploy
        uses: reggionick/s3-deploy@v4
        with:
          folder: build
          bucket: budget-app-ihm-qua
          bucket-region: eu-west-3
          invalidation: /
          dist-id: E1PBK2ENEPNHGV
          no-cache: true
          private: true
