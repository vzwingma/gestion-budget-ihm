name: CI on Master
  # Controls when the action will run.
# Triggers the workflow on push or pull request events on all but the master branch
on:
    # Sequence of patterns matched against refs/heads
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v3
    -
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    -
      name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
    -
      run: npm ci
      name: CI Install
    -
      run: npm run test
      name: Unit tests
    -
      run: npm run build --if-present --mode staging
      name: Build
    -
      run: zip -r app_build.zip build/*
    -
      uses: actions/upload-artifact@v2
      name: Upload IHM app
      with:
        path: app_build.zip
        name: app_build.zip
# LINT
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      -
        name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -
        run: npm install eslint --save
      -
        run: npm run lint
  sonarcloud:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: /home/runner/work/gestion-budget-ihm/gestion-budget-ihm
          args: >
            -Dsonar.organization=vzwingma-github
            -Dsonar.projectKey=vzwingma_gestion-budget-ihm
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # PUBLISH DOCKER IMAGES
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        name: Download IHM app
        with:
          name: app_build.zip
      -
        name: Unzip app archive
        run: unzip app_build.zip
      -
        name: Copie du DockerFile
        run: cp /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/external-ressources/docker/Dockerfile-IHM /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/Dockerfile-IHM
      -
        name: Copie de la config nginx
        run: cp /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/external-ressources/docker/nginx.conf /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/nginx.conf
      -
        name: Build and push IHM
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: /home/runner/work/gestion-budget-ihm/gestion-budget-ihm/
          file: Dockerfile-IHM
          push: true
          tags: vzwingmabudget/gestion_budget_ihm:snapshot
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}